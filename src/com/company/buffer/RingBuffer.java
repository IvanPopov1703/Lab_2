package com.company.buffer;

/*
 *
 * @param <E> тип элементов
 * */
public interface RingBuffer<E> extends Iterable<E> {

    /**
     * Возвращает и удаляет элемент из начала очереди.
     *
     * @return Элемент или {@code null}, если очередь пуста
     */
    E poll();

    /**
     * Возвращает (но не удаляет) элемент из начала очереди.
     *
     * @return Элемент или {@code null}, если очередь пуста
     */
    E peek();

    /**
     * Добавляет элемент в конец очереди.
     * Затирает начало очереди в случае, если она заполнена.
     *
     * @param item новый элемент
     */
    void add(E item);

    /**
     * Получение элемента, который будет удалён (перезаписан)
     * при вызове метода add().
     *
     * @return удаляемый элемент или если очередь не заполнена, то null
     */
    E getLastItem();

    /**
     * Возвращает размер коллекции.
     *
     * @return размер
     */
    int getSize();

    /**
     * Возвращает текущее количество элементов в буфере
     *
     * @return текущее количество элементов
     */
    int getCurrentNumberItems();

    /**
     * Печать буфера
     */
    void print();
}
